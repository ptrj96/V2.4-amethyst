#####################################################################
#   A better print_start macro for v2/trident
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Nevermore (if you have one)
## Z_TILT_ADJUST (For Trident only)
## QUAD_GANTRY_LEVEL (For V2.4 only)
[include KAMP_Settings.cfg]

[delayed_gcode off_nevermore]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=0              # Turn off the nevermore
    SET_FAN_SPEED FAN=evenmore SPEED=0               # Turn off the evenmore


[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_LED LED="disco" RED=0.5 GREEN=0 BLUE=0.5 WHITE=0.5 SYNC=0 TRANSMIT=1

  SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  STATUS_HOMING                                         # Set LEDs to homing-mode
  G28                                                   # Full home (XYZ)
  G90                                                   # Absolute position

  BED_MESH_CLEAR                                        # Clear old saved bed mesh (if any)
  SKEW_PROFILE LOAD=CaliFlower

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    M106 S255                                           # Turn on the PT-fan

    SET_FAN_SPEED FAN=nevermore SPEED=1.0               # Turn on the nevermore
    SET_FAN_SPEED FAN=evenmore SPEED=1.0                # Turn on the evenmore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 3 min"               # Display info on display
    G4 P150000                                          # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  #STATUS_LEVELING                                      # Set LEDs to leveling-mode
  #Z_TILT_ADJUST                                        # Level the printer via Z_TILT_ADJUST
  #G28 Z                                                # Home Z again after Z_TILT_ADJUST

  ##  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling"                       # Display info on display
  STATUS_LEVELING                                       # Set LEDs to leveling-mode
  QUAD_GANTRY_LEVEL                                     # Level the printer via QGL
  G28 Z                                                 # Home Z again after QGL

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  STATUS_MESHING                                       # Set LEDs to bed mesh-mode
  BED_MESH_CALIBRATE                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  CARTOGRAPHER_TOUCH                                    # Calibrate z offset only with hot nozzle

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  STATUS_HEATING                                        # Set LEDs to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
  STATUS_PRINTING                                       # Set LEDs to printing-mode
  VORON_PURGE                                           # Purge line

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 10) %}
        {% set z_safe = 10.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y-10} F3600          ; park nozzle at rear

    SET_SKEW CLEAR=1

    STATUS_READY
    SET_LED LED="disco" RED=.5 GREEN=0 BLUE=.5 WHITE=0 SYNC=0 TRANSMIT=1
    UPDATE_DELAYED_GCODE ID=off_nevermore DURATION=240

[gcode_macro LOAD_FILAMENT]
variable_load_distance = 40     # Distance to load filament into the extruder
variable_purge_distance = 30    # Distance to purge filament after loading
gcode:
    {% set load_speed = params.LOAD_SPEED | default(1500) | float %}
    {% set purge_speed = params.PURGE_SPEED | default(300) | float %}
    {% set min_temp = params.MIN_TEMP | default(235) | float %}
    {% set turn_off_extruder = params.TURN_OFF_EXTRUDER | default(1) | int %}  ; Turn off extruder after loading (0/1)
    
    SAVE_GCODE_STATE NAME=load_state    ; Create gcode state

    # Heat extruder to the minimum required temperature if necessary
    {% if printer.extruder.temperature < min_temp %}
        M109 S{min_temp} ; Set extruder temp and wait
    {% endif %}

    G91                                 ; Relative positioning
    G92 E0                              ; Reset extruder
    G1 E{load_distance} F{load_speed}   ; Load filament quickly
    G1 E{purge_distance} F{purge_speed} ; Purge filament

    # Optionally turn off the extruder heater after loading
    {% if turn_off_extruder %}
        M104 S0 ; Turn off extruder heater
    {% endif %}

    RESTORE_GCODE_STATE NAME=load_state ; Restore gcode state
    M118 Filament Loaded                ; Notify completion

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance: 50    # Distance to retract filament from the extruder
variable_purge_distance: 20     # Distance to purge filament before unloading
gcode:
    {% set unload_speed = params.UNLOAD_SPEED | default(1500) | float %}
    {% set purge_speed = params.PURGE_SPEED | default(300) | float %}
    {% set min_temp = params.MIN_TEMP | default(235) | float %}
    {% set turn_off_extruder = params.TURN_OFF_EXTRUDER | default(1) | int %}  ; Turn off extruder after unloading (0/1)

    SAVE_GCODE_STATE NAME=unload_state ; Save current printer state

    # Heat extruder to the minimum required temperature if necessary
    {% if printer.extruder.temperature < min_temp %}
        M109 S{min_temp} ; Set extruder temp and wait
    {% endif %}

    G91                                     ; Enable relative positioning
    G92 E0                                  ; Reset extruder position
    G1 E{purge_distance} F{purge_speed}     ; Purge filament
    G1 E-{unload_distance} F{unload_speed}  ; Unload filament

    # Optionally turn off the extruder heater after unloading
    {% if turn_off_extruder %}
        M104 S0 ; Turn off extruder heater
    {% endif %}

    RESTORE_GCODE_STATE NAME=unload_state   ; Restore saved printer state
    M118 Filament Unloaded                  ; Notify completion
    
# [gcode_macro UNLOAD_FILAMENT]
# gcode:
#   {% set min_temp = params.MIN_TEMP | default(235) | float %}
#   SAVE_GCODE_STATE NAME=unload_state ; Save current printer state
  
#   {% if printer.extruder.temperature < min_temp %}
#    M109 S{min_temp} ; Set extruder temp and wait
#   {% endif %}
  
#   M83                            ; set extruder to relative
#   G1 E10 F300                    ; extrude a little to soften tip
#   G1 E-100 F1800                  ; retract some, but not too much or it will jam
#   M82                            ; set extruder to absolute

#   M104 S0 ; Turn off extruder heater

#   RESTORE_GCODE_STATE NAME=unload_state   ; Restore saved printer state
#   M118 Filament Unloaded  
  